#!/bin/bash

# ======================== CH·ª®C NƒÇNG T·∫†O VM ========================
create_vm_flow() {
  zones_tokyo=("asia-northeast1-a" "asia-northeast1-b" "asia-northeast1-c")
  zones_osaka=("asia-northeast2-a" "asia-northeast2-b" "asia-northeast2-c")

  echo -e "\nüåè Ch·ªçn khu v·ª±c:"
  echo "1) Tokyo (asia-northeast1)"
  echo "2) Osaka (asia-northeast2)"
  read -p "Nh·∫≠p s·ªë [1-2]: " REGION_CHOICE

  case $REGION_CHOICE in
    1)
      REGION="asia-northeast1"
      ZONES=("${zones_tokyo[@]}")
      PREFIX="tokyo"
      ;;
    2)
      REGION="asia-northeast2"
      ZONES=("${zones_osaka[@]}")
      PREFIX="osaka"
      ;;
    *)
      echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Tho√°t script."
      exit 1
      ;;
  esac

  echo -e "\nüìå Ch·ªçn zone trong v√πng $REGION:"
  for i in "${!ZONES[@]}"; do
    echo "$((i+1))) ${ZONES[$i]}"
  done

  read -p "‚û°Ô∏è Nh·∫≠p s·ªë t∆∞∆°ng ·ª©ng v·ªõi zone (ho·∫∑c Enter ƒë·ªÉ t·∫°o r·∫£i ƒë·ªÅu): " ZONE_INDEX
  if [ -n "$ZONE_INDEX" ]; then
    ZONE_INDEX=$((ZONE_INDEX - 1))
    if [ "$ZONE_INDEX" -lt 0 ] || [ "$ZONE_INDEX" -ge "${#ZONES[@]}" ]; then
      echo "‚ùå Zone kh√¥ng h·ª£p l·ªá. Tho√°t script."
      exit 1
    fi
    ZONES=("${ZONES[$ZONE_INDEX]}")
  fi

  read -p "‚úèÔ∏è Nh·∫≠p prefix ƒë·∫∑t t√™n VM (m·∫∑c ƒë·ªãnh: $PREFIX): " CUSTOM_PREFIX
  PREFIX=${CUSTOM_PREFIX:-$PREFIX}

  read -p "üî¢ Nh·∫≠p s·ªë l∆∞·ª£ng VM mu·ªën t·∫°o (m·∫∑c ƒë·ªãnh: 24): " COUNT
  COUNT=${COUNT:-24}

  echo "üåê Ch·ªçn lo·∫°i IP:"
  echo "1) C√≥ IP c√¥ng c·ªông (Public IP ‚Äì s·∫Ω g√°n IP tƒ©nh ri√™ng)"
  echo "2) Kh√¥ng c√≥ IP c√¥ng c·ªông (Private only)"
  read -p "üîå Nh·∫≠p l·ª±a ch·ªçn [1-2] (m·∫∑c ƒë·ªãnh: 1): " IP_OPTION
  IP_OPTION=${IP_OPTION:-1}

  echo -e "\nüöÄ ƒêang t·∫°o $COUNT VM t·∫°i v√πng: $REGION..."

  for ((i=1; i<=COUNT; i++)); do
    ZONE="${ZONES[((i-1)%${#ZONES[@]})]}"
    REGION=$(echo "$ZONE" | rev | cut -d'-' -f2- | rev)
    num=$(printf "%02d" $((RANDOM % 100)))
    name="${PREFIX}${num}"

    if gcloud compute instances describe "$name" --zone="$ZONE" &>/dev/null; then
      echo "‚ö†Ô∏è VM $name ƒë√£ t·ªìn t·∫°i ·ªü $ZONE. B·ªè qua."
      continue
    fi

    if [ "$IP_OPTION" == "1" ]; then
      IP_NAME="ip-${name}"
      echo "‚öôÔ∏è T·∫°o IP tƒ©nh [$IP_NAME] trong v√πng [$REGION]..."
      if ! gcloud compute addresses create "$IP_NAME" --region="$REGION" --quiet; then
        echo "‚ùå Kh√¥ng t·∫°o ƒë∆∞·ª£c IP [$IP_NAME]. C√≥ th·ªÉ v∆∞·ª£t quota. B·ªè qua VM n√†y."
        continue
      fi
      STATIC_IP=$(gcloud compute addresses describe "$IP_NAME" --region="$REGION" --format="get(address)")
      echo "üõ†Ô∏è T·∫°o VM [$name] ·ªü $ZONE v·ªõi IP: $STATIC_IP"
      gcloud compute instances create "$name"         --zone="$ZONE"         --machine-type=e2-micro         --image=ubuntu-minimal-2404-noble-amd64-v20250624         --image-project=ubuntu-os-cloud         --boot-disk-size=10GB         --address="$STATIC_IP"
      echo "$name,$STATIC_IP,$ZONE" >> created_vms.log
    else
      echo "üîí T·∫°o VM [$name] kh√¥ng c√≥ IP c√¥ng c·ªông ·ªü $ZONE"
      gcloud compute instances create "$name"         --zone="$ZONE"         --machine-type=e2-micro         --image=ubuntu-minimal-2404-noble-amd64-v20250624         --image-project=ubuntu-os-cloud         --boot-disk-size=10GB         --no-address
      echo "$name,NONE,$ZONE" >> created_vms.log
    fi
    echo "‚úÖ ƒê√£ t·∫°o: $name"
  done
}

# ======================== CH·ª®C NƒÇNG ƒê·ªîI IP ========================
change_ip_flow() {
  echo "\nüì¶ L·∫•y danh s√°ch VM..."
  INSTANCES=($(gcloud compute instances list --format="value(name)"))
  if [ ${#INSTANCES[@]} -eq 0 ]; then echo "‚ùå Kh√¥ng t√¨m th·∫•y VM n√†o."; exit 1; fi

  echo "üíª Ch·ªçn VM ƒë·ªÉ g√°n IP:"
  select INSTANCE_NAME in "${INSTANCES[@]}"; do
    if [ -n "$INSTANCE_NAME" ]; then break; else echo "‚ùó Ch·ªçn s·ªë h·ª£p l·ªá."; fi
  done

  ZONE=$(gcloud compute instances list --filter="name=($INSTANCE_NAME)" --format="value(zone)" | rev | cut -d'/' -f1 | rev)
  REGION=$(echo "$ZONE" | rev | cut -d'-' -f2- | rev)
  echo "\nüìç VM [$INSTANCE_NAME] n·∫±m ·ªü ZONE: $ZONE | REGION: $REGION"

  IP_NAME="static-ip-$RANDOM"
  echo "\n‚öôÔ∏è T·∫°o IP tƒ©nh [$IP_NAME] trong $REGION..."
  gcloud compute addresses create "$IP_NAME" --region="$REGION" --quiet
  STATIC_IP=$(gcloud compute addresses describe "$IP_NAME" --region="$REGION" --format="get(address)")

  echo "üîó G√°n IP [$STATIC_IP] v√†o [$INSTANCE_NAME]..."
  gcloud compute instances delete-access-config "$INSTANCE_NAME" --access-config-name="external-nat" --zone="$ZONE" &>/dev/null
  gcloud compute instances add-access-config "$INSTANCE_NAME" --access-config-name="external-nat" --address="$STATIC_IP" --zone="$ZONE"

  echo "‚úÖ VM [$INSTANCE_NAME] ƒë√£ g√°n IP m·ªõi: $STATIC_IP"
}

# ======================== XO√Å IP KH·ªéI VM ========================
remove_ip_from_vm() {
  echo "\nüì¶ L·∫•y danh s√°ch VM..."
  INSTANCES=($(gcloud compute instances list --format="value(name)"))
  if [ ${#INSTANCES[@]} -eq 0 ]; then echo "‚ùå Kh√¥ng t√¨m th·∫•y VM n√†o."; exit 1; fi

  echo "üíª Ch·ªçn VM mu·ªën xo√° IP:"
  select INSTANCE_NAME in "${INSTANCES[@]}"; do
    if [ -n "$INSTANCE_NAME" ]; then break; else echo "‚ùó Ch·ªçn s·ªë h·ª£p l·ªá."; fi
  done

  ZONE=$(gcloud compute instances list --filter="name=($INSTANCE_NAME)" --format="value(zone)" | rev | cut -d'/' -f1 | rev)
  NAT_IP=$(gcloud compute instances describe "$INSTANCE_NAME" --zone="$ZONE" --format="get(networkInterfaces[0].accessConfigs[0].natIP)")

  if [ -z "$NAT_IP" ]; then
    echo "‚ö†Ô∏è VM [$INSTANCE_NAME] kh√¥ng c√≥ IP c√¥ng c·ªông ƒë·ªÉ xo√°."
    return
  fi

  echo "‚ö†Ô∏è VM [$INSTANCE_NAME] ƒëang c√≥ IP: $NAT_IP"
  read -p "‚ùì B·∫°n c√≥ ch·∫Øc mu·ªën xo√° IP kh·ªèi VM n√†y? [Y/n]: " CONFIRM
  CONFIRM=${CONFIRM,,}
  if [[ "$CONFIRM" == "n" || "$CONFIRM" == "no" ]]; then
    echo "üö´ Hu·ª∑ thao t√°c xo√° IP."
    return
  fi

  echo "‚ùå ƒêang xo√° IP kh·ªèi [$INSTANCE_NAME]..."
  gcloud compute instances delete-access-config "$INSTANCE_NAME" --access-config-name="external-nat" --zone="$ZONE"
  echo "‚úÖ ƒê√£ xo√° IP kh·ªèi VM [$INSTANCE_NAME]."
}

# ======================== XO√Å TO√ÄN B·ªò IP KH√îNG D√ôNG ========================
cleanup_global_ips_direct() {
  echo "\nüß® ƒêang ki·ªÉm tra v√† xo√° IP kh√¥ng d√πng to√†n b·ªô d·ª± √°n..."
  mapfile -t IP_ENTRIES < <(gcloud compute addresses list --filter="status=RESERVED" --format="value(name,region)")
  if [ ${#IP_ENTRIES[@]} -eq 0 ]; then echo "‚úÖ Kh√¥ng c√≥ IP n√†o c·∫ßn xo√°."; return; fi

  read -p "‚ö†Ô∏è S·∫Ω xo√° ${#IP_ENTRIES[@]} IP kh√¥ng d√πng. X√°c nh·∫≠n? [Y/n]: " confirm
  confirm=${confirm,,}
  if [[ "$confirm" == "n" || "$confirm" == "no" ]]; then echo "üö´ Hu·ª∑ thao t√°c."; return; fi

  for entry in "${IP_ENTRIES[@]}"; do
    IP_NAME=$(echo "$entry" | awk '{print $1}')
    REGION_URL=$(echo "$entry" | awk '{print $2}')
    REGION_NAME=$(basename "$REGION_URL")
    echo "‚ùå ƒêang xo√° IP [$IP_NAME] t·∫°i v√πng [$REGION_NAME]..."
    gcloud compute addresses delete "$IP_NAME" --region="$REGION_NAME" --quiet
  done
  echo "‚úÖ ƒê√£ xo√° to√†n b·ªô IP kh√¥ng d√πng."
}

# ======================== MENU CH√çNH ========================
echo -e "\nüåê Ch·ªçn thao t√°c:"
echo "1) T·∫°o nhi·ªÅu VM"
echo "2) ƒê·ªïi IP VM"
echo "3) Xo√° t·∫•t c·∫£ IP tƒ©nh kh√¥ng d√πng (to√†n b·ªô d·ª± √°n)"
echo "4) Xo√° IP kh·ªèi 1 VM ƒëang g√°n IP"
read -p "üëâ Nh·∫≠p l·ª±a ch·ªçn (1/2/3/4) (m·∫∑c ƒë·ªãnh: 4): " MAIN_CHOICE
MAIN_CHOICE=${MAIN_CHOICE:-4}

case "$MAIN_CHOICE" in
  1) create_vm_flow ;;
  2) change_ip_flow ;;
  3) cleanup_global_ips_direct ;;
  4) remove_ip_from_vm ;;
  *) echo "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Tho√°t."; exit 1 ;;
esac
